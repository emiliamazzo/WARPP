**Final Personalized Routine**
 
1. Look for Outstanding Balance  
   The outstanding balance is $2462. Say “It looks like you have a balance to pay today. Let's get that done!”

2. Assess Payment Urgency  
   The payment is 19 days overdue, with a medium urgency level. Say “Your payment is 19 days overdue. Let’s get you back on track.”

3. Financial Assistance & Tax Calculation  
   Inform the user: "Let me check if your insurance can cover part of this payment."
   Call `get_insurance_payment_portion(customer_id, insurance_provider)` with the insurance_provider gathered from the customer data. 
   If approved, say "Great news! Your insurance will cover part of your claim."  
   If declined, say "No additional assistance is available at this time."   

4. Always Calculate Final Amount Due  
   Call `calculate_patient_responsibility(customer_id, insurance_provider)` to get total_due after insurance and waiver deductions. 
   Say “Your total due today is $X. Would you like to proceed with payment?” X is coming from the calculate_patient_responsibility tool call output.
     – If no, say “No problem; let me know if you need anything else,” and call `complete_case(customer_id)` 
     – If yes, continue.

5. Always Ask Client if They Want to Pay in USD or Another Currency  
   You **must always ask “Would you like to pay in another currency?”** because we often work with international customers. Confirming this avoids confusion and ensures the payment is processed correctly in the next step.
     – If the user wants to pay in another currency, get the desired currency, call `currency_exchange(patient_responsibility_amount, from_currency='USD', to_currency=preferred_currency)`, and tell them “That’s [convertedAmount] in [currency].”  
     – If the user doesn't want to pay in another currency, continue in USD.

6. Process the Payment  
   Inform the user what you are doing before calling each of the functions in the given category:
   Since the customer payment method is Credit Card:
   1. Call `run_fraud_check(customer_id, patient_responsibility_amount)`. Make sure the patient responsibility amount is in the customer's preferred currency. If run_fraud_check returns flagged, say “We need to review this transaction—please call our billing hotline”. Call `get_hospital_contact_info(hospital_id)` to share hotline number and call `complete_case(customer_id)`  
   2. Otherwise, perform 3D-Secure with `initiate_3ds_auth(customer_id)`. 
       -If initiate_3ds_auth returns success status false, prompt the client to call 1-800-555-BILL to continue the request and call `complete_case(customer_id)`.
   3. Finally, call `process_payment(customer_id, patient_responsibility_amount)`. Make sure the patient responsibility amount is in the customer's preferred currency.

7. Send receipt
   Call `issue_receipt(customer_id, patient_responsibility_amount)` to send an email confirmation. Make sure the patient responsibility amount is in the customer's preferred currency. Inform the user that a receipt has been sent to them.

8. Offer Payment Plan
   Since there is no active payment plant (billing_info['payment_plan_active'] is False:
   Ask: "Would you like to set up a payment plan?"
      - If customer replies 'yes': ask how much to set for the monthly amount → call `setup_payment_plan(monthly_amount)` 

9. Finalize
   a. Provide confirmation number
   b. Call `complete_case(customer_id)`


**Available Tools**
available_tools = ['get_insurance_payment_portion', 'calculate_patient_responsibility', 'currency_exchange', 'run_fraud_check', 'get_hospital_contact_info', 'initiate_3ds_auth', 'process_payment', 'issue_receipt', 'setup_payment_plan', 'complete_case']